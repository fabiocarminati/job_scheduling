 [Config No_Failure-Minimal_Cost]
network = Net
sim-time-limit = 1000s
cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = true
**.C=1
**.E=3
**.channelDelay=0.1s  #should be considered twice in the timeouts:one for the send and one for the reply(2 accesses to the channel)
#**.N = ask  #number of users
#**.E = ask	#number of executors
**.client[*].interArrivalTime=0.1s
**.client[*].timeoutAck=0.5s  #then we will add the channel delay value
**.client[*].timeoutStatus=10s
**.client[0].jobComplexity=1s
**.client[*].jobComplexity=2s #apart client 0 all the other clients will have job complexoty of 2s
**.client[*].maxRetry=3 #to cope with failures within Newjob function

**.executor[*].granularity=5
**.executor[*].probeResponse=3
**.executor[*].probEvent=0
**.executor[*].probCrashDuringExecution=0
**.executor[*].timeoutLoad=0.1s  
**.executor[*].timeoutFailure=0s
**.executor[*].timeoutEndActual=0.2s

[Config No_Failure-Optimal_Load_Balancing]
network = Net
sim-time-limit = 1000s
cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = true
**.C=1
**.E=3
**.channelDelay=0.1s  #should be considered twice in the timeouts:one for the send and one for the reply(2 accesses to the channel)
#**.N = ask  #number of users
#**.E = ask	#number of executors
**.client[*].interArrivalTime=0.1s
**.client[*].timeoutAck=0.5s  #then we will add the channel delay value
**.client[*].timeoutStatus=1s
**.client[0].jobComplexity=0.5s
**.client[*].jobComplexity=2s #apart client 0 all the other clients will have job complexoty of 2s
**.client[*].maxRetry=3 #to cope with failures within Newjob function

**.executor[*].granularity=1
**.executor[*].probeResponse=1
**.executor[*].probEvent=0
**.executor[*].probCrashDuringExecution=0
**.executor[*].timeoutLoad=0.1s  
**.executor[*].timeoutFailure=0s
**.executor[*].timeoutEndActual=0.2s


[Config Failure-Minimal_Cost]
network = Net
sim-time-limit = 1000s
cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = true
**.C=1  #number of users
**.E=3	#number of executors
**.channelDelay=0.1s  #should be considered twice in the timeouts:one for the send and one for the reply(2 accesses to the channel)

**.client[*].interArrivalTime=0.1s
**.client[*].timeoutAck=0.5s  #then we will add the channel delay value
**.client[*].timeoutStatus=10s
**.client[0].jobComplexity=1s
**.client[*].jobComplexity=2s #apart client 0 all the other clients will have job complexoty of 2s
**.client[*].maxRetry=3 #to cope with failures within Newjob function

**.executor[*].granularity=5
**.executor[*].probeResponse=3
**.executor[*].probEvent=0.1
**.executor[*].probCrashDuringExecution=0.09
**.executor[*].timeoutLoad=0.1s  
**.executor[*].timeoutFailure=1s
**.executor[*].timeoutEndActual=0.2s

[Config Failure-Optimal_Load_Balancing]
network = Net
sim-time-limit = 1000s
cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = true
**.C=1  #number of users
**.E=3	#number of executors
**.channelDelay=0s  #should be considered twice in the timeouts:one for the send and one for the reply(2 accesses to the channel)

**.client[*].interArrivalTime=0.1s
**.client[*].timeoutAck=0.5s  #then we will add the channel delay value
**.client[*].timeoutStatus=1s
**.client[0].jobComplexity=0.5s
**.client[*].jobComplexity=2s #apart client 0 all the other clients will have job complexoty of 2s
**.client[*].maxRetry=3 #to cope with failures within Newjob function

**.executor[*].granularity=1
**.executor[*].probeResponse=1
**.executor[*].probEvent=0.1
**.executor[*].probCrashDuringExecution=0.09
**.executor[*].timeoutLoad=0.1s  
**.executor[*].timeoutFailure=1s
**.executor[*].timeoutEndActual=0.2s

