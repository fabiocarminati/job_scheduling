//
// Generated file, do not edit! Created by nedtool 5.5 from msg_check.msg.
//

#ifndef __MSG_CHECK_M_H
#define __MSG_CHECK_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>msg_check.msg:2</tt> by nedtool.
 * <pre>
 * packet msg_check //name of the new type of message 
 * {
 *     string JobId;
 *     int ClientId;
 *     int OriginalExecId;
 *     int ActualExecId;
 *     simtime_t ResidualTime;
 *     int QueueLength;
 *     bool HasEnded;
 *     bool Probing;
 *     bool Probed;
 *     bool ReRouted;
 * }
 * 
 * //packet msg_backup extends msg_check //name of the new type of message 
 * //{
 * </pre>
 */
class msg_check : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string JobId;
    int ClientId;
    int OriginalExecId;
    int ActualExecId;
    ::omnetpp::simtime_t ResidualTime;
    int QueueLength;
    bool HasEnded;
    bool Probing;
    bool Probed;
    bool ReRouted;

  private:
    void copy(const msg_check& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const msg_check&);

  public:
    msg_check(const char *name=nullptr, short kind=0);
    msg_check(const msg_check& other);
    virtual ~msg_check();
    msg_check& operator=(const msg_check& other);
    virtual msg_check *dup() const override {return new msg_check(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getJobId() const;
    virtual void setJobId(const char * JobId);
    virtual int getClientId() const;
    virtual void setClientId(int ClientId);
    virtual int getOriginalExecId() const;
    virtual void setOriginalExecId(int OriginalExecId);
    virtual int getActualExecId() const;
    virtual void setActualExecId(int ActualExecId);
    virtual ::omnetpp::simtime_t getResidualTime() const;
    virtual void setResidualTime(::omnetpp::simtime_t ResidualTime);
    virtual int getQueueLength() const;
    virtual void setQueueLength(int QueueLength);
    virtual bool getHasEnded() const;
    virtual void setHasEnded(bool HasEnded);
    virtual bool getProbing() const;
    virtual void setProbing(bool Probing);
    virtual bool getProbed() const;
    virtual void setProbed(bool Probed);
    virtual bool getReRouted() const;
    virtual void setReRouted(bool ReRouted);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const msg_check& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, msg_check& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MSG_CHECK_M_H

